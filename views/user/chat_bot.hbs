<link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
<style>
    body {
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        height: 100vh;
        justify-content: flex-end;
        background-color: #474545;
    }

    #chat-container {
        display: flex;
        flex-direction: column;
        height: 100vh;
        overflow-y: auto;
        padding: 20px;
        background: #474545;
        padding-top: 60px;
        border-top: 1px solid #ddd;
    }

    #chat-input-container {
        display: flex;
        align-items: center;
        gap: 10px; 
        padding: 10px;
    }

    #chat-input {
        flex-grow: 1;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        height: 80px;
        resize: none;
    }

    #send-button {
        padding: 10px 15px;
        border: none;
        background: #9c9d9e;
        color: white;
        border-radius: 5px;
        cursor: pointer;
    }

    #send-button:hover {
        background: #c0c3c5;
    }

    .chat-message {
        margin-bottom: 10px;
        padding: 10px;
        border-radius: 10px;
        max-width: 80%;
        border-radius: 10px 10px 10px 0px;
    }

    .user-message {
        background-color: #585858;
        color: white;
        align-self: flex-end;
        border-radius: 10px 10px 0px 10px;
    }

    .bot-message {
        background-color: #e0e0e0;
        color: black;
        align-self: flex-start;
    }

    .btn_ai{
        height: 40px;
    }

    .btn-container {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .btn_ext {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 35px;
        height: 35px;
        margin-top: 5px; 
        background: #000000;
        color: white;
        text-decoration: none;
        font-size: 20px;
        border-radius: 50%;
        text-align: center;
        font-weight: bold;
    }

    .btn_ext:hover {
        background: #6f726f;
    }

    @keyframes flash {
        0% { opacity: 1; }
        100% { opacity: 0.5; }
    }

    #loading-indicator {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 20px;
        border-radius: 10px;
        text-align: center;
        z-index: 6000;
    }

    #loading-indicator .spinner {
        border: 4px solid rgba(255, 255, 255, 0.3);
        border-top: 4px solid white;
        border-radius: 50%;
        width: 30px;
        height: 30px;
        animation: spin 1s linear infinite;
        margin: 0 auto;
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    #overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 5000;
        display: none;
    }

    #intro-text {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 44px;
        letter-spacing: 1px;
        font-weight: bold;
        color: white;
        padding: 20px 30px;
        border-radius: 10px;
        text-align: center;
        transition: opacity 0.5s ease-in-out, visibility 0.5s;
    }
</style>

<body>
    <div id="overlay"></div>

    <div id="intro-text">Come, let's start!</div>

    <div id="chat-container"></div>
    <div id="chat-input-container">
        <textarea id="chat-input" placeholder="Type your message..."></textarea>
        
        <div class="btn-container">
            <button class="btn_ai" id="send-button" onclick="sendMessage()">Send</button>
            <a href="/extract_pdf" class="btn_ext">+</a>
        </div>
    </div>

    <div id="loading-indicator">
        <div class="spinner"></div>
        <p>thinking...</p>
    </div>

    <script>

        document.getElementById("chat-input").addEventListener("input", function() {
            let introText = document.getElementById("intro-text");
            let chatInput = this.value.trim();

            if (chatInput === "") {
                introText.style.opacity = "1"; 
                introText.style.visibility = "visible";
            } else {
                introText.style.opacity = "0"; 
                introText.style.visibility = "hidden";
            }
        });

        const textarea = document.getElementById('chat-input');
        textarea.addEventListener('input', () => {
            textarea.style.height = 'auto';
            textarea.style.maxHeight = '200px';
            textarea.style.height = `${textarea.scrollHeight}px`;
        });

        async function sendMessage() {
            let input = document.getElementById("chat-input");
            let message = input.value.trim();
            if (message === "") return;

            let chatContainer = document.getElementById("chat-container");

            let userMessage = document.createElement("div");
            userMessage.classList.add("chat-message", "user-message");
            userMessage.textContent = message;
            chatContainer.appendChild(userMessage);

            input.value = ""; 
            chatContainer.scrollTop = chatContainer.scrollHeight;

            let botMessage = document.createElement("div");
            botMessage.classList.add("chat-message", "bot-message");
            botMessage.textContent = "Thinking...";
            chatContainer.appendChild(botMessage);
            chatContainer.scrollTop = chatContainer.scrollHeight;

            try {
                showLoadingIndicator();
                const response = await fetch('/get_question', {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ question: message })
                });

                if (response.ok) {
                    const result = await response.json();
                    
                    botMessage.textContent = result.answer;  
                    
                    const sources = result.sources || 'N/A';

                    let sourcesMessage = document.createElement("div");
                    sourcesMessage.classList.add("chat-message", "bot-message");
                    sourcesMessage.textContent = `Sources: Pages ${sources}`;

                    chatContainer.appendChild(sourcesMessage);
                    chatContainer.scrollTop = chatContainer.scrollHeight;
                    hideLoadingIndicator()
                } else {
                    botMessage.textContent = 'Sorry, there was an error processing your request. Please try again later.';
                    hideLoadingIndicator();
                }
            } catch (error) {
                botMessage.textContent = 'Sorry, there was an error processing your request. Please try again later.';
                console.error('Error:', error);
            }
            chatContainer.scrollTop = chatContainer.scrollHeight;
        }

        function showOverlay() {
            document.getElementById('overlay').style.display = 'block';
        }

        function hideOverlay() {
            document.getElementById('overlay').style.display = 'none';
        }

        function showLoadingIndicator() {
            document.getElementById('loading-indicator').style.display = 'block';
            showOverlay();
            document.body.style.overflow = 'hidden';
        }

        function hideLoadingIndicator() {
            document.getElementById('loading-indicator').style.display = 'none';
            hideOverlay();
            document.body.style.overflow = 'auto';
        }

    </script>
</body>
